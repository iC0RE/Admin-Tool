/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.gruppe7.admintool.view;

import java.awt.CardLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import org.gruppe7.admintool.controller.DefaultConnection;
import org.gruppe7.admintool.controller.MySqlConnection;
import org.gruppe7.admintool.model.Category;
import org.gruppe7.admintool.model.Question;

/**
 *
 * @author Paul
 */
public class View extends JFrame {

    private Category globalCategory = null;
    private Question globalQuestion = new Question();
    private static final Logger log = Logger.getLogger(View.class.getCanonicalName());
    private DefaultConnection connection = null;

    /**
     * Creates new form View
     */
    public View() {
        try {
            connection = new MySqlConnection();
        } catch (SQLException ex) {
            log.severe(String.format("Keine Datenbankverbindung: %s", ex.getMessage()));
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_template = new javax.swing.JPanel();
        btn_start = new javax.swing.JButton();
        btn_categories = new javax.swing.JButton();
        btn_questions = new javax.swing.JButton();
        btn_options = new javax.swing.JButton();
        pnl_content = new javax.swing.JPanel();
        pnl_start = new javax.swing.JPanel();
        lbl_Copyright = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnl_categoryList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_categories = new javax.swing.JList();
        padding_top = new javax.swing.JPanel();
        padding_topLeftCategory = new javax.swing.JPanel();
        lbl_headlineQuestions1 = new javax.swing.JLabel();
        padding_right = new javax.swing.JPanel();
        btn_newCategory = new javax.swing.JButton();
        btn_editCategory = new javax.swing.JButton();
        btn_cancelCategory = new javax.swing.JButton();
        btn_deleteCategory = new javax.swing.JButton();
        txt_category = new javax.swing.JTextField();
        pnl_buttonChooser = new javax.swing.JPanel();
        pnl_createCategory = new javax.swing.JPanel();
        btn_addCategory = new javax.swing.JButton();
        pnl_editCategory = new javax.swing.JPanel();
        btn_editSelectedCategory = new javax.swing.JButton();
        pnl_placeholderCategory = new javax.swing.JPanel();
        pnl_questionList = new javax.swing.JPanel();
        pnl_placeholderQuestion = new javax.swing.JPanel();
        cbo_category2showQuestions = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_questions = new javax.swing.JList();
        padding_topQuestions = new javax.swing.JPanel();
        padding_topLeft = new javax.swing.JPanel();
        lbl_headlineQuestions = new javax.swing.JLabel();
        padding_topRight = new javax.swing.JPanel();
        lbl_headlineAnswers = new javax.swing.JLabel();
        padding_right1 = new javax.swing.JPanel();
        pnl_answerList = new javax.swing.JPanel();
        pnl_aAnswer = new javax.swing.JPanel();
        lbl_aAnswer = new javax.swing.JLabel();
        pnl_bAnswer = new javax.swing.JPanel();
        lbl_bAnswer = new javax.swing.JLabel();
        pnl_cAnswer = new javax.swing.JPanel();
        lbl_cAnswer = new javax.swing.JLabel();
        pnl_dAnswer = new javax.swing.JPanel();
        lbl_dAnswer = new javax.swing.JLabel();
        btn_editQuestion = new javax.swing.JButton();
        btn_deleteQuestion = new javax.swing.JButton();
        btn_cancelQuestion = new javax.swing.JButton();
        btn_newQuestion = new javax.swing.JButton();
        pnl_questionEdit = new javax.swing.JPanel();
        pnl_leftQuestionEdit = new javax.swing.JPanel();
        cbo_category = new javax.swing.JComboBox();
        txt_content = new javax.swing.JTextField();
        txt_aAnswer = new javax.swing.JTextField();
        txt_bAnswer = new javax.swing.JTextField();
        txt_cAnswer = new javax.swing.JTextField();
        txt_dAnswer = new javax.swing.JTextField();
        btn_readyQuestion = new javax.swing.JButton();
        pnl_rightQuestionEdit = new javax.swing.JPanel();
        padding_topQuestionEdit = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        pnl_options = new javax.swing.JPanel();
        txt_dbHost = new javax.swing.JTextField();
        txt_dbPort = new javax.swing.JTextField();
        txt_dbName = new javax.swing.JTextField();
        txt_dbUser = new javax.swing.JTextField();
        btn_readyOptions = new javax.swing.JButton();
        lbl_headlineDatabaseConnecation = new javax.swing.JLabel();
        padding_left1 = new javax.swing.JPanel();
        padding_right2 = new javax.swing.JPanel();
        pwd_dbPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("qTool");

        pnl_template.setBackground(new java.awt.Color(255, 255, 255));

        btn_start.setBackground(new java.awt.Color(102, 204, 255));
        btn_start.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_start.setText("Start");
        btn_start.setFocusable(false);
        btn_start.setMaximumSize(new java.awt.Dimension(120, 35));
        btn_start.setMinimumSize(new java.awt.Dimension(120, 35));
        btn_start.setPreferredSize(new java.awt.Dimension(120, 35));
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });

        btn_categories.setBackground(new java.awt.Color(255, 255, 255));
        btn_categories.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_categories.setText("Kategorien");
        btn_categories.setFocusable(false);
        btn_categories.setMaximumSize(new java.awt.Dimension(100, 35));
        btn_categories.setMinimumSize(new java.awt.Dimension(100, 35));
        btn_categories.setPreferredSize(new java.awt.Dimension(120, 35));
        btn_categories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_categoriesActionPerformed(evt);
            }
        });

        btn_questions.setBackground(new java.awt.Color(255, 255, 255));
        btn_questions.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_questions.setText("Fragen");
        btn_questions.setFocusable(false);
        btn_questions.setMaximumSize(new java.awt.Dimension(100, 35));
        btn_questions.setMinimumSize(new java.awt.Dimension(100, 35));
        btn_questions.setPreferredSize(new java.awt.Dimension(120, 35));
        btn_questions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn_questionsItemStateChanged(evt);
            }
        });
        btn_questions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_questionsActionPerformed(evt);
            }
        });

        btn_options.setBackground(new java.awt.Color(255, 255, 255));
        btn_options.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_options.setText("Einstellungen");
        btn_options.setFocusable(false);
        btn_options.setMaximumSize(new java.awt.Dimension(120, 35));
        btn_options.setMinimumSize(new java.awt.Dimension(120, 35));
        btn_options.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_optionsActionPerformed(evt);
            }
        });

        pnl_content.setLayout(new java.awt.CardLayout());

        pnl_start.setBackground(new java.awt.Color(255, 255, 255));

        lbl_Copyright.setFont(new java.awt.Font("Calibri Light", 0, 11)); // NOI18N
        lbl_Copyright.setForeground(new java.awt.Color(153, 153, 153));
        lbl_Copyright.setText("Â© Model: Markus Wochnick | Design: Paul Lange | Controller: Alex Klopfer & Marcel Kastner");

        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("v1.0");

        javax.swing.GroupLayout pnl_startLayout = new javax.swing.GroupLayout(pnl_start);
        pnl_start.setLayout(pnl_startLayout);
        pnl_startLayout.setHorizontalGroup(
            pnl_startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_startLayout.createSequentialGroup()
                .addComponent(lbl_Copyright)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 528, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
        pnl_startLayout.setVerticalGroup(
            pnl_startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_startLayout.createSequentialGroup()
                .addGap(0, 499, Short.MAX_VALUE)
                .addGroup(pnl_startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Copyright)
                    .addComponent(jLabel1)))
        );

        pnl_content.add(pnl_start, "card2");

        pnl_categoryList.setBackground(new java.awt.Color(255, 255, 255));

        lst_categories.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        lst_categories.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lst_categories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lst_categoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lst_categories);

        padding_top.setBackground(new java.awt.Color(255, 255, 255));

        padding_topLeftCategory.setBackground(new java.awt.Color(255, 255, 255));

        lbl_headlineQuestions1.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_headlineQuestions1.setText("Ãbersicht Kategorien");

        javax.swing.GroupLayout padding_topLeftCategoryLayout = new javax.swing.GroupLayout(padding_topLeftCategory);
        padding_topLeftCategory.setLayout(padding_topLeftCategoryLayout);
        padding_topLeftCategoryLayout.setHorizontalGroup(
            padding_topLeftCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topLeftCategoryLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(lbl_headlineQuestions1)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        padding_topLeftCategoryLayout.setVerticalGroup(
            padding_topLeftCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topLeftCategoryLayout.createSequentialGroup()
                .addComponent(lbl_headlineQuestions1)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout padding_topLayout = new javax.swing.GroupLayout(padding_top);
        padding_top.setLayout(padding_topLayout);
        padding_topLayout.setHorizontalGroup(
            padding_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topLayout.createSequentialGroup()
                .addComponent(padding_topLeftCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        padding_topLayout.setVerticalGroup(
            padding_topLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(padding_topLeftCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        padding_right.setBackground(new java.awt.Color(255, 255, 255));
        padding_right.setOpaque(false);

        btn_newCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_newCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_newCategory.setText("Neu");
        btn_newCategory.setFocusable(false);
        btn_newCategory.setPreferredSize(new java.awt.Dimension(75, 35));
        btn_newCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newCategoryActionPerformed(evt);
            }
        });

        btn_editCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_editCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_editCategory.setText("Bearbeiten");
        btn_editCategory.setEnabled(false);
        btn_editCategory.setFocusable(false);
        btn_editCategory.setMaximumSize(new java.awt.Dimension(120, 33));
        btn_editCategory.setMinimumSize(new java.awt.Dimension(120, 33));
        btn_editCategory.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_editCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editCategoryActionPerformed(evt);
            }
        });

        btn_cancelCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_cancelCategory.setText("Abbrechen");
        btn_cancelCategory.setFocusable(false);
        btn_cancelCategory.setMaximumSize(new java.awt.Dimension(130, 33));
        btn_cancelCategory.setMinimumSize(new java.awt.Dimension(130, 33));
        btn_cancelCategory.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_cancelCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelCategoryActionPerformed(evt);
            }
        });

        btn_deleteCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_deleteCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_deleteCategory.setText("LÃ¶schen");
        btn_deleteCategory.setEnabled(false);
        btn_deleteCategory.setFocusable(false);
        btn_deleteCategory.setPreferredSize(new java.awt.Dimension(110, 35));
        btn_deleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteCategoryActionPerformed(evt);
            }
        });

        txt_category.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_category.setForeground(new java.awt.Color(204, 204, 204));
        txt_category.setText("Kategorie");
        txt_category.setVisible(false);
        txt_category.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_categoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_categoryFocusLost(evt);
            }
        });
        txt_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_categoryActionPerformed(evt);
            }
        });

        pnl_buttonChooser.setBackground(new java.awt.Color(255, 255, 255));
        pnl_buttonChooser.setLayout(new java.awt.CardLayout());

        pnl_createCategory.setBackground(new java.awt.Color(255, 255, 255));

        btn_addCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_addCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_addCategory.setText("HinzufÃ¼gen");
        btn_addCategory.setFocusable(false);
        btn_addCategory.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_addCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_createCategoryLayout = new javax.swing.GroupLayout(pnl_createCategory);
        pnl_createCategory.setLayout(pnl_createCategoryLayout);
        pnl_createCategoryLayout.setHorizontalGroup(
            pnl_createCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_createCategoryLayout.createSequentialGroup()
                .addGap(0, 399, Short.MAX_VALUE)
                .addComponent(btn_addCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_createCategoryLayout.setVerticalGroup(
            pnl_createCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_createCategoryLayout.createSequentialGroup()
                .addComponent(btn_addCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        pnl_buttonChooser.add(pnl_createCategory, "card2");

        pnl_editCategory.setBackground(new java.awt.Color(255, 255, 255));

        btn_editSelectedCategory.setBackground(new java.awt.Color(255, 255, 255));
        btn_editSelectedCategory.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_editSelectedCategory.setText("Ãndern");
        btn_editSelectedCategory.setFocusable(false);
        btn_editSelectedCategory.setMaximumSize(new java.awt.Dimension(130, 35));
        btn_editSelectedCategory.setMinimumSize(new java.awt.Dimension(130, 35));
        btn_editSelectedCategory.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_editSelectedCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editSelectedCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_editCategoryLayout = new javax.swing.GroupLayout(pnl_editCategory);
        pnl_editCategory.setLayout(pnl_editCategoryLayout);
        pnl_editCategoryLayout.setHorizontalGroup(
            pnl_editCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_editCategoryLayout.createSequentialGroup()
                .addGap(0, 399, Short.MAX_VALUE)
                .addComponent(btn_editSelectedCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_editCategoryLayout.setVerticalGroup(
            pnl_editCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_editCategoryLayout.createSequentialGroup()
                .addComponent(btn_editSelectedCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        pnl_buttonChooser.add(pnl_editCategory, "card3");
        pnl_buttonChooser.setVisible(false);

        javax.swing.GroupLayout padding_rightLayout = new javax.swing.GroupLayout(padding_right);
        padding_right.setLayout(padding_rightLayout);
        padding_rightLayout.setHorizontalGroup(
            padding_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_rightLayout.createSequentialGroup()
                .addComponent(btn_newCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_editCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_deleteCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_cancelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(txt_category)
            .addComponent(pnl_buttonChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        padding_rightLayout.setVerticalGroup(
            padding_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, padding_rightLayout.createSequentialGroup()
                .addComponent(txt_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_buttonChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addGroup(padding_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_editCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_newCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btn_cancelCategory.setVisible(false);

        pnl_placeholderCategory.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnl_placeholderCategoryLayout = new javax.swing.GroupLayout(pnl_placeholderCategory);
        pnl_placeholderCategory.setLayout(pnl_placeholderCategoryLayout);
        pnl_placeholderCategoryLayout.setHorizontalGroup(
            pnl_placeholderCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnl_placeholderCategoryLayout.setVerticalGroup(
            pnl_placeholderCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnl_categoryListLayout = new javax.swing.GroupLayout(pnl_categoryList);
        pnl_categoryList.setLayout(pnl_categoryListLayout);
        pnl_categoryListLayout.setHorizontalGroup(
            pnl_categoryListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_categoryListLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(padding_right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(padding_top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_placeholderCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_categoryListLayout.setVerticalGroup(
            pnl_categoryListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_categoryListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(padding_top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_placeholderCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_categoryListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(padding_right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnl_content.add(pnl_categoryList, "card3");

        pnl_questionList.setBackground(new java.awt.Color(255, 255, 255));

        pnl_placeholderQuestion.setBackground(new java.awt.Color(255, 255, 255));
        pnl_placeholderQuestion.setPreferredSize(new java.awt.Dimension(450, 40));

        cbo_category2showQuestions.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        cbo_category2showQuestions.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbo_category2showQuestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_category2showQuestionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_placeholderQuestionLayout = new javax.swing.GroupLayout(pnl_placeholderQuestion);
        pnl_placeholderQuestion.setLayout(pnl_placeholderQuestionLayout);
        pnl_placeholderQuestionLayout.setHorizontalGroup(
            pnl_placeholderQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_placeholderQuestionLayout.createSequentialGroup()
                .addComponent(cbo_category2showQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_placeholderQuestionLayout.setVerticalGroup(
            pnl_placeholderQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_placeholderQuestionLayout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(cbo_category2showQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lst_questions.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        lst_questions.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lst_questions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lst_questions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lst_questionsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lst_questions);

        padding_topQuestions.setBackground(new java.awt.Color(255, 255, 255));
        padding_topQuestions.setPreferredSize(new java.awt.Dimension(100, 100));

        padding_topLeft.setBackground(new java.awt.Color(255, 255, 255));

        lbl_headlineQuestions.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_headlineQuestions.setText("Fragen");

        javax.swing.GroupLayout padding_topLeftLayout = new javax.swing.GroupLayout(padding_topLeft);
        padding_topLeft.setLayout(padding_topLeftLayout);
        padding_topLeftLayout.setHorizontalGroup(
            padding_topLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topLeftLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(lbl_headlineQuestions)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        padding_topLeftLayout.setVerticalGroup(
            padding_topLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topLeftLayout.createSequentialGroup()
                .addComponent(lbl_headlineQuestions)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        padding_topRight.setBackground(new java.awt.Color(255, 255, 255));

        lbl_headlineAnswers.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_headlineAnswers.setText("Antworten");

        javax.swing.GroupLayout padding_topRightLayout = new javax.swing.GroupLayout(padding_topRight);
        padding_topRight.setLayout(padding_topRightLayout);
        padding_topRightLayout.setHorizontalGroup(
            padding_topRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, padding_topRightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_headlineAnswers)
                .addGap(183, 183, 183))
        );
        padding_topRightLayout.setVerticalGroup(
            padding_topRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topRightLayout.createSequentialGroup()
                .addComponent(lbl_headlineAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout padding_topQuestionsLayout = new javax.swing.GroupLayout(padding_topQuestions);
        padding_topQuestions.setLayout(padding_topQuestionsLayout);
        padding_topQuestionsLayout.setHorizontalGroup(
            padding_topQuestionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_topQuestionsLayout.createSequentialGroup()
                .addComponent(padding_topLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(padding_topRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        padding_topQuestionsLayout.setVerticalGroup(
            padding_topQuestionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(padding_topRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(padding_topLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        padding_right1.setBackground(new java.awt.Color(255, 255, 255));

        pnl_answerList.setBackground(new java.awt.Color(255, 255, 255));

        pnl_aAnswer.setBackground(new java.awt.Color(153, 255, 153));
        pnl_aAnswer.setPreferredSize(new java.awt.Dimension(100, 78));

        lbl_aAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnl_aAnswerLayout = new javax.swing.GroupLayout(pnl_aAnswer);
        pnl_aAnswer.setLayout(pnl_aAnswerLayout);
        pnl_aAnswerLayout.setHorizontalGroup(
            pnl_aAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_aAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_aAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_aAnswerLayout.setVerticalGroup(
            pnl_aAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_aAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_aAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnl_bAnswer.setBackground(new java.awt.Color(255, 102, 102));
        pnl_bAnswer.setPreferredSize(new java.awt.Dimension(100, 78));

        lbl_bAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnl_bAnswerLayout = new javax.swing.GroupLayout(pnl_bAnswer);
        pnl_bAnswer.setLayout(pnl_bAnswerLayout);
        pnl_bAnswerLayout.setHorizontalGroup(
            pnl_bAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_bAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_bAnswerLayout.setVerticalGroup(
            pnl_bAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_bAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_bAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnl_cAnswer.setBackground(new java.awt.Color(255, 102, 102));
        pnl_cAnswer.setPreferredSize(new java.awt.Dimension(100, 78));

        lbl_cAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnl_cAnswerLayout = new javax.swing.GroupLayout(pnl_cAnswer);
        pnl_cAnswer.setLayout(pnl_cAnswerLayout);
        pnl_cAnswerLayout.setHorizontalGroup(
            pnl_cAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_cAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_cAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_cAnswerLayout.setVerticalGroup(
            pnl_cAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_cAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_cAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnl_dAnswer.setBackground(new java.awt.Color(255, 102, 102));
        pnl_dAnswer.setPreferredSize(new java.awt.Dimension(100, 78));

        lbl_dAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N

        javax.swing.GroupLayout pnl_dAnswerLayout = new javax.swing.GroupLayout(pnl_dAnswer);
        pnl_dAnswer.setLayout(pnl_dAnswerLayout);
        pnl_dAnswerLayout.setHorizontalGroup(
            pnl_dAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_dAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_dAnswerLayout.setVerticalGroup(
            pnl_dAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_dAnswerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_dAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnl_answerListLayout = new javax.swing.GroupLayout(pnl_answerList);
        pnl_answerList.setLayout(pnl_answerListLayout);
        pnl_answerListLayout.setHorizontalGroup(
            pnl_answerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_aAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
            .addComponent(pnl_bAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
            .addComponent(pnl_cAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
            .addComponent(pnl_dAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );
        pnl_answerListLayout.setVerticalGroup(
            pnl_answerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_answerListLayout.createSequentialGroup()
                .addComponent(pnl_aAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_bAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_cAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_dAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btn_editQuestion.setBackground(new java.awt.Color(255, 255, 255));
        btn_editQuestion.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_editQuestion.setText("Bearbeiten");
        btn_editQuestion.setEnabled(false);
        btn_editQuestion.setFocusable(false);
        btn_editQuestion.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_editQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editQuestionActionPerformed(evt);
            }
        });

        btn_deleteQuestion.setBackground(new java.awt.Color(255, 255, 255));
        btn_deleteQuestion.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_deleteQuestion.setText("LÃ¶schen");
        btn_deleteQuestion.setEnabled(false);
        btn_deleteQuestion.setFocusable(false);
        btn_deleteQuestion.setPreferredSize(new java.awt.Dimension(110, 35));
        btn_deleteQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteQuestionActionPerformed(evt);
            }
        });

        btn_cancelQuestion.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelQuestion.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_cancelQuestion.setText("Abbrechen");
        btn_cancelQuestion.setFocusable(false);
        btn_cancelQuestion.setPreferredSize(new java.awt.Dimension(130, 35));
        btn_cancelQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelQuestionActionPerformed(evt);
            }
        });

        btn_newQuestion.setBackground(new java.awt.Color(255, 255, 255));
        btn_newQuestion.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_newQuestion.setText("Neu");
        btn_newQuestion.setFocusable(false);
        btn_newQuestion.setPreferredSize(new java.awt.Dimension(75, 35));
        btn_newQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_newQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout padding_right1Layout = new javax.swing.GroupLayout(padding_right1);
        padding_right1.setLayout(padding_right1Layout);
        padding_right1Layout.setHorizontalGroup(
            padding_right1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_right1Layout.createSequentialGroup()
                .addComponent(btn_newQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_editQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_deleteQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(btn_cancelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnl_answerList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        padding_right1Layout.setVerticalGroup(
            padding_right1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(padding_right1Layout.createSequentialGroup()
                .addComponent(pnl_answerList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(padding_right1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_editQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_newQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btn_cancelQuestion.setVisible(false);

        javax.swing.GroupLayout pnl_questionListLayout = new javax.swing.GroupLayout(pnl_questionList);
        pnl_questionList.setLayout(pnl_questionListLayout);
        pnl_questionListLayout.setHorizontalGroup(
            pnl_questionListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(padding_topQuestions, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(pnl_questionListLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(padding_right1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnl_placeholderQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
        );
        pnl_questionListLayout.setVerticalGroup(
            pnl_questionListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_questionListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(padding_topQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_placeholderQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_questionListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(padding_right1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)))
        );

        pnl_content.add(pnl_questionList, "card4");

        pnl_questionEdit.setBackground(new java.awt.Color(255, 255, 255));

        pnl_leftQuestionEdit.setBackground(new java.awt.Color(255, 255, 255));

        cbo_category.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        cbo_category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbo_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_categoryActionPerformed(evt);
            }
        });

        txt_content.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_content.setForeground(new java.awt.Color(204, 204, 204));
        txt_content.setText("Frage");
        txt_content.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_contentFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_contentFocusLost(evt);
            }
        });
        txt_content.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contentActionPerformed(evt);
            }
        });

        txt_aAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_aAnswer.setForeground(new java.awt.Color(204, 204, 204));
        txt_aAnswer.setText("Antwort a (Richtige Antwort!)");
        txt_aAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_aAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_aAnswerFocusLost(evt);
            }
        });

        txt_bAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_bAnswer.setForeground(new java.awt.Color(204, 204, 204));
        txt_bAnswer.setText("Antwort b (Falsche Antwort!)");
        txt_bAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_bAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_bAnswerFocusLost(evt);
            }
        });
        txt_bAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bAnswerActionPerformed(evt);
            }
        });

        txt_cAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_cAnswer.setForeground(new java.awt.Color(204, 204, 204));
        txt_cAnswer.setText("Antwort c (Falsche Antwort!)");
        txt_cAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_cAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cAnswerFocusLost(evt);
            }
        });
        txt_cAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cAnswerActionPerformed(evt);
            }
        });

        txt_dAnswer.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_dAnswer.setForeground(new java.awt.Color(204, 204, 204));
        txt_dAnswer.setText("Antwort d (Falsche Antwort!)");
        txt_dAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dAnswerFocusLost(evt);
            }
        });
        txt_dAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dAnswerActionPerformed(evt);
            }
        });

        btn_readyQuestion.setBackground(new java.awt.Color(255, 255, 255));
        btn_readyQuestion.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_readyQuestion.setText("Fertig");
        btn_readyQuestion.setFocusable(false);
        btn_readyQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_readyQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_leftQuestionEditLayout = new javax.swing.GroupLayout(pnl_leftQuestionEdit);
        pnl_leftQuestionEdit.setLayout(pnl_leftQuestionEditLayout);
        pnl_leftQuestionEditLayout.setHorizontalGroup(
            pnl_leftQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_leftQuestionEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_leftQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_content)
                    .addComponent(txt_aAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addComponent(txt_bAnswer)
                    .addComponent(txt_cAnswer)
                    .addComponent(txt_dAnswer)
                    .addGroup(pnl_leftQuestionEditLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_readyQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbo_category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnl_leftQuestionEditLayout.setVerticalGroup(
            pnl_leftQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_leftQuestionEditLayout.createSequentialGroup()
                .addComponent(cbo_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_aAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_bAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_cAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_dAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_readyQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_rightQuestionEdit.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnl_rightQuestionEditLayout = new javax.swing.GroupLayout(pnl_rightQuestionEdit);
        pnl_rightQuestionEdit.setLayout(pnl_rightQuestionEditLayout);
        pnl_rightQuestionEditLayout.setHorizontalGroup(
            pnl_rightQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        pnl_rightQuestionEditLayout.setVerticalGroup(
            pnl_rightQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        padding_topQuestionEdit.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout padding_topQuestionEditLayout = new javax.swing.GroupLayout(padding_topQuestionEdit);
        padding_topQuestionEdit.setLayout(padding_topQuestionEditLayout);
        padding_topQuestionEditLayout.setHorizontalGroup(
            padding_topQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, padding_topQuestionEditLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        padding_topQuestionEditLayout.setVerticalGroup(
            padding_topQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, padding_topQuestionEditLayout.createSequentialGroup()
                .addGroup(padding_topQuestionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnl_questionEditLayout = new javax.swing.GroupLayout(pnl_questionEdit);
        pnl_questionEdit.setLayout(pnl_questionEditLayout);
        pnl_questionEditLayout.setHorizontalGroup(
            pnl_questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_questionEditLayout.createSequentialGroup()
                .addComponent(pnl_leftQuestionEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_rightQuestionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(padding_topQuestionEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_questionEditLayout.setVerticalGroup(
            pnl_questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_questionEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(padding_topQuestionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_questionEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_questionEditLayout.createSequentialGroup()
                        .addComponent(pnl_rightQuestionEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addComponent(pnl_leftQuestionEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnl_content.add(pnl_questionEdit, "card7");

        pnl_options.setBackground(new java.awt.Color(255, 255, 255));

        txt_dbHost.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_dbHost.setForeground(new java.awt.Color(204, 204, 204));
        txt_dbHost.setText("Host");
        txt_dbHost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dbHostFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dbHostFocusLost(evt);
            }
        });

        txt_dbPort.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_dbPort.setForeground(new java.awt.Color(204, 204, 204));
        txt_dbPort.setText("Port");
        txt_dbPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dbPortFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dbPortFocusLost(evt);
            }
        });

        txt_dbName.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_dbName.setForeground(new java.awt.Color(204, 204, 204));
        txt_dbName.setText("Name der Datenbank");
        txt_dbName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dbNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dbNameFocusLost(evt);
            }
        });

        txt_dbUser.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        txt_dbUser.setForeground(new java.awt.Color(204, 204, 204));
        txt_dbUser.setText("Benutzer");
        txt_dbUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_dbUserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_dbUserFocusLost(evt);
            }
        });

        btn_readyOptions.setBackground(new java.awt.Color(255, 255, 255));
        btn_readyOptions.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        btn_readyOptions.setText("Fertig");
        btn_readyOptions.setFocusable(false);
        btn_readyOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_readyOptionsActionPerformed(evt);
            }
        });

        lbl_headlineDatabaseConnecation.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lbl_headlineDatabaseConnecation.setText("Datenbank-Verbindung");

        padding_left1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout padding_left1Layout = new javax.swing.GroupLayout(padding_left1);
        padding_left1.setLayout(padding_left1Layout);
        padding_left1Layout.setHorizontalGroup(
            padding_left1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        padding_left1Layout.setVerticalGroup(
            padding_left1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        padding_right2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout padding_right2Layout = new javax.swing.GroupLayout(padding_right2);
        padding_right2.setLayout(padding_right2Layout);
        padding_right2Layout.setHorizontalGroup(
            padding_right2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        padding_right2Layout.setVerticalGroup(
            padding_right2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pwd_dbPassword.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        pwd_dbPassword.setForeground(new java.awt.Color(204, 204, 204));
        pwd_dbPassword.setText("Passwort");
        pwd_dbPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pwd_dbPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pwd_dbPasswordFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnl_optionsLayout = new javax.swing.GroupLayout(pnl_options);
        pnl_options.setLayout(pnl_optionsLayout);
        pnl_optionsLayout.setHorizontalGroup(
            pnl_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_optionsLayout.createSequentialGroup()
                .addComponent(padding_left1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_headlineDatabaseConnecation)
                    .addComponent(txt_dbHost)
                    .addComponent(txt_dbPort)
                    .addComponent(txt_dbName, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(txt_dbUser)
                    .addComponent(btn_readyOptions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwd_dbPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(padding_right2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_optionsLayout.setVerticalGroup(
            pnl_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_optionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_optionsLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lbl_headlineDatabaseConnecation)
                        .addGap(36, 36, 36)
                        .addComponent(txt_dbHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_dbPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_dbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_dbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pwd_dbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_readyOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(147, Short.MAX_VALUE))
                    .addComponent(padding_left1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(padding_right2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnl_content.add(pnl_options, "card5");

        javax.swing.GroupLayout pnl_templateLayout = new javax.swing.GroupLayout(pnl_template);
        pnl_template.setLayout(pnl_templateLayout);
        pnl_templateLayout.setHorizontalGroup(
            pnl_templateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_templateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_templateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_templateLayout.createSequentialGroup()
                        .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_categories, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_questions, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_options, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnl_templateLayout.setVerticalGroup(
            pnl_templateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_templateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_templateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_templateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_categories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_questions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_template, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_template, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enableAddingCategory() {
        CardLayout cl = (CardLayout) (pnl_buttonChooser.getLayout());
        cl.first(pnl_buttonChooser);
        txt_category.setForeground(new java.awt.Color(204, 204, 204));
        txt_category.setText("Kategorie");
        txt_category.setVisible(true);
        lst_categories.clearSelection();
        pnl_buttonChooser.setVisible(true);
        btn_editCategory.setEnabled(false);
        btn_deleteCategory.setEnabled(false);
        btn_cancelCategory.setVisible(true);
        if (txt_category.getText().equals("Kategorie")) {
            btn_addCategory.setEnabled(false);
        }
    }

    private void enableEditingCategory() {
        CardLayout cl = (CardLayout) (pnl_buttonChooser.getLayout());
        cl.first(pnl_buttonChooser);
        cl.next(pnl_buttonChooser);
        txt_category.setForeground(Color.black);
        txt_category.setVisible(true);
        pnl_buttonChooser.setVisible(true);
        btn_cancelCategory.setVisible(true);
        if (txt_category.getText().equals("Kategorie")) {
            btn_editSelectedCategory.setEnabled(false);
        }
    }
    
    private void enableListCategory(){
        txt_category.setVisible(false);
        pnl_buttonChooser.setVisible(false);
        btn_cancelCategory.setVisible(false);
    }

    private void enableAddingQuestion(){
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        setInActiveAllButtons();
        setActive(btn_questions);
        globalQuestion = null;
        updateCategoryInQuestionModel();
    }
    
    private void enableEditingQuestion() {
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        txt_content.setForeground(Color.black);
        txt_aAnswer.setForeground(Color.black);
        txt_bAnswer.setForeground(Color.black);
        txt_cAnswer.setForeground(Color.black);
        txt_dAnswer.setForeground(Color.black);
        setInActiveAllButtons();
        setActive(btn_questions);
    }
    
    private void enableListQuestion(){
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        setInActiveAllButtons();
        setActive(btn_questions);
        updateQuestionModel();
    }

    private void setActive(javax.swing.JButton btn) {
        btn.setBackground(new java.awt.Color(102, 204, 255));
    }

    private void setInActiveAllButtons() {
        btn_start.setBackground(new java.awt.Color(255, 255, 255));
        btn_categories.setBackground(new java.awt.Color(255, 255, 255));
        btn_questions.setBackground(new java.awt.Color(255, 255, 255));
        btn_options.setBackground(new java.awt.Color(255, 255, 255));
    }


    private void btn_categoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_categoriesActionPerformed
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        cl.next(pnl_content);
        setInActiveAllButtons();
        setActive(btn_categories);
        updateCategoryModel();

    }//GEN-LAST:event_btn_categoriesActionPerformed

    private void updateCategoryModel() {
        List<Category> categories = connection.getCategories();
        DefaultListModel model = new DefaultListModel();
        for (Category category : categories) {
            model.addElement(category);
        }
        lst_categories.setModel(model);
    }

    private void updateQuestionModel() {
        List<Category> categories = connection.getCategories();
        DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
        for (Category category : categories) {
            cboModel.addElement(category);
        }
        cbo_category2showQuestions.setModel(cboModel);
        if (globalCategory == null) {
            globalCategory = (Category) cbo_category2showQuestions.getSelectedItem();
        }
        //cbo_category2showQuestions.setSelectedItem(globalCategory);
        System.out.format("Update", globalCategory.getId());
        System.out.println(globalCategory.getId());
        List<Question> questions = connection.getQuestionsByCategoryId(globalCategory.getId());
        DefaultListModel lstModel = new DefaultListModel();
        for (Question question : questions) {
            lstModel.addElement(question);
        }
        lst_questions.setModel(lstModel);
        pnl_aAnswer.setVisible(false);
        pnl_bAnswer.setVisible(false);
        pnl_cAnswer.setVisible(false);
        pnl_dAnswer.setVisible(false);
        padding_topRight.setVisible(false);
    }

    private void updateCategoryInQuestionModel() {
        List<Category> categories = connection.getCategories();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (Category category : categories) {
            model.addElement(category);
        }
        cbo_category.setModel(model);
    }

    private void btn_questionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_questionsActionPerformed
        enableListQuestion();
    }//GEN-LAST:event_btn_questionsActionPerformed

    private void btn_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_optionsActionPerformed
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        cl.next(pnl_content);
        setInActiveAllButtons();
        setActive(btn_options);
    }//GEN-LAST:event_btn_optionsActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        CardLayout cl = (CardLayout) (pnl_content.getLayout());
        cl.first(pnl_content);
        setInActiveAllButtons();
        setActive(btn_start);
    }//GEN-LAST:event_btn_startActionPerformed

    private void btn_cancelQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelQuestionActionPerformed

    }//GEN-LAST:event_btn_cancelQuestionActionPerformed

    private void txt_dbHostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbHostFocusGained
        if (txt_dbHost.getText().equals("Host")) {
            txt_dbHost.setText(null);
            txt_dbHost.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_dbHostFocusGained

    private void txt_dbPortFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbPortFocusGained
        if (txt_dbPort.getText().equals("Port")) {
            txt_dbPort.setText(null);
            txt_dbPort.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_dbPortFocusGained

    private void txt_dbHostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbHostFocusLost
        if (txt_dbHost.getText().equals("")) {
            txt_dbHost.setForeground(new java.awt.Color(204, 204, 204));
            txt_dbHost.setText("Host");
        }
    }//GEN-LAST:event_txt_dbHostFocusLost

    private void txt_dbPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbPortFocusLost
        if (txt_dbPort.getText().equals("")) {
            txt_dbPort.setForeground(new java.awt.Color(204, 204, 204));
            txt_dbPort.setText("Port");
        }
    }//GEN-LAST:event_txt_dbPortFocusLost

    private void txt_dbNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbNameFocusGained
        if (txt_dbName.getText().equals("Name der Datenbank")) {
            txt_dbName.setText(null);
            txt_dbName.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_dbNameFocusGained

    private void txt_dbNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbNameFocusLost
        if (txt_dbName.getText().equals("")) {
            txt_dbName.setForeground(new java.awt.Color(204, 204, 204));
            txt_dbName.setText("Name der Datenbank");
        }
    }//GEN-LAST:event_txt_dbNameFocusLost

    private void txt_dbUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbUserFocusGained
        if (txt_dbUser.getText().equals("Benutzer")) {
            txt_dbUser.setText(null);
            txt_dbUser.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_dbUserFocusGained

    private void txt_dbUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dbUserFocusLost
        if (txt_dbUser.getText().equals("")) {
            txt_dbUser.setForeground(new java.awt.Color(204, 204, 204));
            txt_dbUser.setText("Benutzer");
        }
    }//GEN-LAST:event_txt_dbUserFocusLost

    private void btn_readyOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_readyOptionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_readyOptionsActionPerformed

    private void pwd_dbPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwd_dbPasswordFocusGained
        pwd_dbPassword.setText(null);
        pwd_dbPassword.setForeground(Color.black);
    }//GEN-LAST:event_pwd_dbPasswordFocusGained

    private void pwd_dbPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwd_dbPasswordFocusLost

    }//GEN-LAST:event_pwd_dbPasswordFocusLost

    private void btn_deleteQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteQuestionActionPerformed
        Object value = lst_questions.getSelectedValue();
        if (value != null) {
            Question question = (Question) value;
            connection.deleteQuestion(question);
            updateQuestionModel();
        }
    }//GEN-LAST:event_btn_deleteQuestionActionPerformed

    private void btn_newQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newQuestionActionPerformed
        enableAddingQuestion();
    }//GEN-LAST:event_btn_newQuestionActionPerformed

    private void txt_contentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_contentFocusGained
        if (txt_content.getText().equals("Frage")) {
            txt_content.setText(null);
            txt_content.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_contentFocusGained

    private void txt_contentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_contentFocusLost
        if (txt_content.getText().equals("")) {
            txt_content.setForeground(new java.awt.Color(204, 204, 204));
            txt_content.setText("Frage");
        }
    }//GEN-LAST:event_txt_contentFocusLost

    private void txt_aAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_aAnswerFocusGained
        if (txt_aAnswer.getText().equals("Antwort a (Richtige Antwort!)")) {
            txt_aAnswer.setText(null);
            txt_aAnswer.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_aAnswerFocusGained

    private void txt_aAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_aAnswerFocusLost
        if (txt_aAnswer.getText().equals("")) {
            txt_aAnswer.setForeground(new java.awt.Color(204, 204, 204));
            txt_aAnswer.setText("Antwort a (Richtige Antwort!)");
        }
    }//GEN-LAST:event_txt_aAnswerFocusLost

    private void txt_bAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bAnswerFocusGained
        if (txt_bAnswer.getText().equals("Antwort b (Falsche Antwort!)")) {
            txt_bAnswer.setText(null);
            txt_bAnswer.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_bAnswerFocusGained

    private void txt_bAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bAnswerFocusLost
        if (txt_bAnswer.getText().equals("")) {
            txt_bAnswer.setForeground(new java.awt.Color(204, 204, 204));
            txt_bAnswer.setText("Antwort b (Falsche Antwort!)");
        }
    }//GEN-LAST:event_txt_bAnswerFocusLost

    private void txt_bAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bAnswerActionPerformed

    private void txt_cAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cAnswerFocusGained
        if (txt_cAnswer.getText().equals("Antwort c (Falsche Antwort!)")) {
            txt_cAnswer.setText(null);
            txt_cAnswer.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_cAnswerFocusGained

    private void txt_cAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cAnswerFocusLost
        if (txt_cAnswer.getText().equals("")) {
            txt_cAnswer.setForeground(new java.awt.Color(204, 204, 204));
            txt_cAnswer.setText("Antwort c (Falsche Antwort!)");
        }
    }//GEN-LAST:event_txt_cAnswerFocusLost

    private void txt_cAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cAnswerActionPerformed

    private void txt_dAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dAnswerFocusGained
        if (txt_dAnswer.getText().equals("Antwort d (Falsche Antwort!)")) {
            txt_dAnswer.setText(null);
            txt_dAnswer.setForeground(Color.black);
        }
    }//GEN-LAST:event_txt_dAnswerFocusGained

    private void txt_dAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_dAnswerFocusLost
        if (txt_dAnswer.getText().equals("")) {
            txt_dAnswer.setForeground(new java.awt.Color(204, 204, 204));
            txt_dAnswer.setText("Antwort d (Falsche Antwort!)");
        }
    }//GEN-LAST:event_txt_dAnswerFocusLost

    private void txt_dAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dAnswerActionPerformed

    private void btn_readyQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_readyQuestionActionPerformed
        if (globalQuestion != null) {
            // Frage bearbeiten
            globalQuestion.setId(globalQuestion.getId());
            globalQuestion.setContent(txt_content.getText());
            globalQuestion.setaAnswer(txt_aAnswer.getText());
            globalQuestion.setbAnswer(txt_bAnswer.getText());
            globalQuestion.setcAnswer(txt_cAnswer.getText());
            globalQuestion.setdAnswer(txt_dAnswer.getText());
            Object value = cbo_category.getSelectedItem();
            if (value != null) {
                globalCategory = (Category) value;
            }
            globalQuestion.setCategory_id(globalCategory.getId());
            connection.updateQuestion(globalQuestion);
            enableListQuestion();
            System.out.format("Bereits vorhanden %d", globalQuestion.getId());
        } else {
            // Neue Frage
            globalCategory = (Category) cbo_category.getSelectedItem();
            Question question = new Question();
            question.setContent(txt_content.getText());
            question.setaAnswer(txt_aAnswer.getText());
            question.setbAnswer(txt_bAnswer.getText());
            question.setcAnswer(txt_cAnswer.getText());
            question.setdAnswer(txt_dAnswer.getText());
            question.setCategory_id(globalCategory.getId());
            connection.createQuestion(question);
            enableListQuestion();
            System.out.println("Neue Frage");
        }
    }//GEN-LAST:event_btn_readyQuestionActionPerformed

    private void txt_contentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_contentActionPerformed

    private void cbo_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_categoryActionPerformed
        Object value = cbo_category.getSelectedItem();
        if (value != null) {
            globalCategory = (Category) value;
        }
    }//GEN-LAST:event_cbo_categoryActionPerformed

    private void btn_newCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_newCategoryActionPerformed
        enableAddingCategory();
    }//GEN-LAST:event_btn_newCategoryActionPerformed

    private void btn_cancelCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelCategoryActionPerformed
        enableListCategory();
    }//GEN-LAST:event_btn_cancelCategoryActionPerformed

    private void btn_deleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteCategoryActionPerformed
        Object value = lst_categories.getSelectedValue();
        if (value != null) {
            Category category = (Category) value;
            connection.deleteCategory(category);
            updateCategoryModel();
        }
    }//GEN-LAST:event_btn_deleteCategoryActionPerformed

    private void txt_categoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_categoryFocusGained
        if (txt_category.getText().equals("Kategorie")) {
            txt_category.setText(null);
            txt_category.setForeground(Color.black);
            btn_addCategory.setEnabled(true);
        }
    }//GEN-LAST:event_txt_categoryFocusGained

    private void txt_categoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_categoryFocusLost
        if (txt_category.getText().equals("")) {
            txt_category.setForeground(new java.awt.Color(204, 204, 204));
            txt_category.setText("Kategorie");
        }
    }//GEN-LAST:event_txt_categoryFocusLost

    private void txt_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_categoryActionPerformed

    private void btn_addCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addCategoryActionPerformed
        Category category = new Category();
        category.setTitle(txt_category.getText());
        connection.createCategory(category);
        updateCategoryModel();
        enableListCategory();
    }//GEN-LAST:event_btn_addCategoryActionPerformed

    private void btn_editCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editCategoryActionPerformed
        Object value = lst_categories.getSelectedValue();
        if (value != null) {
            globalCategory = (Category) value;
            txt_category.setText(globalCategory.toString());
            enableEditingCategory();
        }
    }//GEN-LAST:event_btn_editCategoryActionPerformed

    private void btn_editQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editQuestionActionPerformed
        Object value = lst_questions.getSelectedValue();
        if (value != null) {
            globalQuestion = (Question) value;
            txt_content.setText(globalQuestion.getContent());
            txt_aAnswer.setText(globalQuestion.getaAnswer());
            txt_bAnswer.setText(globalQuestion.getbAnswer());
            txt_cAnswer.setText(globalQuestion.getcAnswer());
            txt_dAnswer.setText(globalQuestion.getdAnswer());
            List<Category> categories = connection.getCategories();
            DefaultComboBoxModel cboModel = new DefaultComboBoxModel();
            for (Category category : categories) {
                cboModel.addElement(category);
            }
            cbo_category.setModel(cboModel);
            cbo_category.setSelectedItem(globalCategory);
            enableEditingQuestion();
        }
    }//GEN-LAST:event_btn_editQuestionActionPerformed

    private void lst_categoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lst_categoriesValueChanged
        btn_editCategory.setEnabled(true);
        btn_deleteCategory.setEnabled(true);
    }//GEN-LAST:event_lst_categoriesValueChanged

    private void btn_editSelectedCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editSelectedCategoryActionPerformed
        globalCategory.setTitle(txt_category.getText());
        connection.updateCategory(globalCategory);
        txt_category.setVisible(false);
        txt_category.setForeground(new java.awt.Color(204, 204, 204));
        txt_category.setText("Kategorie");
        btn_editSelectedCategory.setVisible(false);
        enableListCategory();
        updateCategoryModel();
    }//GEN-LAST:event_btn_editSelectedCategoryActionPerformed

    private void cbo_category2showQuestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_category2showQuestionsActionPerformed
        Object value = cbo_category2showQuestions.getSelectedItem();
        if (value != null) {
            globalCategory = (Category) value;
            System.out.format("ActionPerformed %d", globalCategory.getId());
        }
        updateQuestionModel();
    }//GEN-LAST:event_cbo_category2showQuestionsActionPerformed

    private void btn_questionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn_questionsItemStateChanged
        updateQuestionModel();
    }//GEN-LAST:event_btn_questionsItemStateChanged

    private void lst_questionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lst_questionsValueChanged
        Object value = lst_questions.getSelectedValue();
        if (value != null) {
            globalQuestion = (Question) value;
            pnl_aAnswer.setVisible(true);
            pnl_bAnswer.setVisible(true);
            pnl_cAnswer.setVisible(true);
            pnl_dAnswer.setVisible(true);
            padding_topRight.setVisible(true);
            lbl_aAnswer.setText(globalQuestion.getaAnswer());
            lbl_bAnswer.setText(globalQuestion.getbAnswer());
            lbl_cAnswer.setText(globalQuestion.getcAnswer());
            lbl_dAnswer.setText(globalQuestion.getdAnswer());
            btn_editQuestion.setEnabled(true);
            btn_deleteQuestion.setEnabled(true);
        }
    }//GEN-LAST:event_lst_questionsValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addCategory;
    private javax.swing.JButton btn_cancelCategory;
    private javax.swing.JButton btn_cancelQuestion;
    private javax.swing.JButton btn_categories;
    private javax.swing.JButton btn_deleteCategory;
    private javax.swing.JButton btn_deleteQuestion;
    private javax.swing.JButton btn_editCategory;
    private javax.swing.JButton btn_editQuestion;
    private javax.swing.JButton btn_editSelectedCategory;
    private javax.swing.JButton btn_newCategory;
    private javax.swing.JButton btn_newQuestion;
    private javax.swing.JButton btn_options;
    private javax.swing.JButton btn_questions;
    private javax.swing.JButton btn_readyOptions;
    private javax.swing.JButton btn_readyQuestion;
    private javax.swing.JButton btn_start;
    private javax.swing.JComboBox cbo_category;
    private javax.swing.JComboBox cbo_category2showQuestions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Copyright;
    private javax.swing.JLabel lbl_aAnswer;
    private javax.swing.JLabel lbl_bAnswer;
    private javax.swing.JLabel lbl_cAnswer;
    private javax.swing.JLabel lbl_dAnswer;
    private javax.swing.JLabel lbl_headlineAnswers;
    private javax.swing.JLabel lbl_headlineDatabaseConnecation;
    private javax.swing.JLabel lbl_headlineQuestions;
    private javax.swing.JLabel lbl_headlineQuestions1;
    private javax.swing.JList lst_categories;
    private javax.swing.JList lst_questions;
    private javax.swing.JPanel padding_left1;
    private javax.swing.JPanel padding_right;
    private javax.swing.JPanel padding_right1;
    private javax.swing.JPanel padding_right2;
    private javax.swing.JPanel padding_top;
    private javax.swing.JPanel padding_topLeft;
    private javax.swing.JPanel padding_topLeftCategory;
    private javax.swing.JPanel padding_topQuestionEdit;
    private javax.swing.JPanel padding_topQuestions;
    private javax.swing.JPanel padding_topRight;
    private javax.swing.JPanel pnl_aAnswer;
    private javax.swing.JPanel pnl_answerList;
    private javax.swing.JPanel pnl_bAnswer;
    private javax.swing.JPanel pnl_buttonChooser;
    private javax.swing.JPanel pnl_cAnswer;
    private javax.swing.JPanel pnl_categoryList;
    private javax.swing.JPanel pnl_content;
    private javax.swing.JPanel pnl_createCategory;
    private javax.swing.JPanel pnl_dAnswer;
    private javax.swing.JPanel pnl_editCategory;
    private javax.swing.JPanel pnl_leftQuestionEdit;
    private javax.swing.JPanel pnl_options;
    private javax.swing.JPanel pnl_placeholderCategory;
    private javax.swing.JPanel pnl_placeholderQuestion;
    private javax.swing.JPanel pnl_questionEdit;
    private javax.swing.JPanel pnl_questionList;
    private javax.swing.JPanel pnl_rightQuestionEdit;
    private javax.swing.JPanel pnl_start;
    private javax.swing.JPanel pnl_template;
    private javax.swing.JPasswordField pwd_dbPassword;
    private javax.swing.JTextField txt_aAnswer;
    private javax.swing.JTextField txt_bAnswer;
    private javax.swing.JTextField txt_cAnswer;
    private javax.swing.JTextField txt_category;
    private javax.swing.JTextField txt_content;
    private javax.swing.JTextField txt_dAnswer;
    private javax.swing.JTextField txt_dbHost;
    private javax.swing.JTextField txt_dbName;
    private javax.swing.JTextField txt_dbPort;
    private javax.swing.JTextField txt_dbUser;
    // End of variables declaration//GEN-END:variables
}
